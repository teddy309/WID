var gl;

window.onload = function init()
{
    var canvas = document.getElementById( "gl-canvas" );
    
    gl = WebGLUtils.setupWebGL( canvas );
    if ( !gl ) { alert( "WebGL isn't available" ); }

    var vertex = new Float32Array([

        //// tree

        //leaf
        0.0, 0.5, 0.9, -0.75, -0.9, -0.75,
        0.0, 0.75, 0.75, -0.25, -0.75, -0.25,
        0.0, 0.75, 0.5, 0.25, -0.5, 0.25,

        //wood
        -0.25, -0.75, 0.25, -0.75, -0.25, -1.0,
        0.25, -0.75, -0.25, -1.0, 0.25, -1.0,

        //stars
        0.0, 0.9, -0.2, 0.7, 0.2, 0.7,
        0.0, 0.63, 0.2, 0.83, -0.2, 0.83,

        //lines
        0.25, 0.5, -0.5, 0.25,
        0.5, 0.75 - 0.666,
        -0.75, -0.25,
        0.6, -0.33,
        -0.9, -0.75,

        //decoration1
        - 0.25, 0.0 + 0.0, - 0.20, 0.05 + 0.0, -0.05 + -0.25, 0.05 + 0.0,
        -0.05 + -0.25, -0.05 + 0.0, 0.05 + -0.25, -0.05 + 0.0, 0.05 + -0.25, 0.05 + 0.0,

        //decoration2
        0.0 + 0.25, 0.0 + -0.15, 0.05 + 0.25, 0.05 + -0.15, -0.05 + 0.25, 0.05 + -0.15,
        -0.05 + 0.25, -0.05 + -0.15, 0.05 + 0.25, -0.05 + -0.15, 0.05 + 0.25, 0.05 + -0.15,

        //decoration3
        0.0 + 0.4, 0.0 + -0.6, 0.05 + 0.4, 0.05 + -0.6, -0.05 + 0.4, 0.05 + -0.6,
        -0.05 + 0.4, -0.05 + -0.6, 0.05 + 0.4, -0.05 + -0.6, 0.05 + 0.4, 0.05 + -0.6,

        //decoration4
        0.0 + -0.4, 0.0 + -0.4, 0.05 + -0.4, 0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4,
        -0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4, 0.05 + -0.4,


        //// tree

        //leaf
        0.0, 0.5, 0.9, -0.75, -0.9, -0.75,
        0.0, 0.75, 0.75, -0.25, -0.75, -0.25,
        0.0, 0.75, 0.5, 0.25, -0.5, 0.25,

        //wood
        -0.25, -0.75, 0.25, -0.75, -0.25, -1.0,
        0.25, -0.75, -0.25, -1.0, 0.25, -1.0,

        //stars
        0.0, 0.9, -0.2, 0.7, 0.2, 0.7,
        0.0, 0.63, 0.2, 0.83, -0.2, 0.83,

        //lines
        0.25, 0.5, -0.5, 0.25,
        0.5, 0.75 - 0.666,
        -0.75, -0.25,
        0.6, -0.33,
        -0.9, -0.75,

        //decoration1
        - 0.25, 0.0 + 0.0, - 0.20, 0.05 + 0.0, -0.05 + -0.25, 0.05 + 0.0,
        -0.05 + -0.25, -0.05 + 0.0, 0.05 + -0.25, -0.05 + 0.0, 0.05 + -0.25, 0.05 + 0.0,

        //decoration2
        0.0 + 0.25, 0.0 + -0.15, 0.05 + 0.25, 0.05 + -0.15, -0.05 + 0.25, 0.05 + -0.15,
        -0.05 + 0.25, -0.05 + -0.15, 0.05 + 0.25, -0.05 + -0.15, 0.05 + 0.25, 0.05 + -0.15,

        //decoration3
        0.0 + 0.4, 0.0 + -0.6, 0.05 + 0.4, 0.05 + -0.6, -0.05 + 0.4, 0.05 + -0.6,
        -0.05 + 0.4, -0.05 + -0.6, 0.05 + 0.4, -0.05 + -0.6, 0.05 + 0.4, 0.05 + -0.6,

        //decoration4
        0.0 + -0.4, 0.0 + -0.4, 0.05 + -0.4, 0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4,
        -0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4, -0.05 + -0.4, 0.05 + -0.4, 0.05 + -0.4,

        //// rudolf ////
        0.55,
        -0.575,
        0.7,
        -0.575,
        0.55,
        -0.7,
        0.7,
        -0.575,
        0.55,
        -0.7,
        0.7,
        -0.7,
        0.565,
        -0.45,
        0.6,
        -0.45,
        0.565,
        -0.575,
        0.6,
        -0.45,
        0.565,
        -0.575,
        0.6,
        -0.575,
        0.65,
        -0.45,
        0.685,
        -0.45,
        0.65,
        -0.575,
        0.685,
        -0.45,
        0.65,
        -0.575,
        0.685,
        -0.575,
        0.53,
        -0.485,
        0.565,
        -0.485,
        0.53,
        -0.52,
        0.565,
        -0.485,
        0.53,
        -0.52,
        0.565,
        -0.52,
        0.685,
        -0.485,
        0.72,
        -0.485,
        0.685,
        -0.52,
        0.72,
        -0.485,
        0.685,
        -0.52,
        0.72,
        -0.52,
        0.5,
        -0.575,
        0.55,
        -0.575,
        0.55,
        -0.61,
        0.7,
        -0.575,
        0.75,
        -0.575,
        0.7,
        -0.61,
        0.57,
        -0.6,
        0.61,
        -0.6,
        0.57,
        -0.63,
        0.61,
        -0.6,
        0.57,
        -0.63,
        0.61,
        -0.63,
        0.64,
        -0.6,
        0.68,
        -0.6,
        0.64,
        -0.63,
        0.68,
        -0.6,
        0.64,
        -0.63,
        0.68,
        -0.63,
        0.61,
        -0.64,
        0.64,
        -0.64,
        0.61,
        -0.665,
        0.64,
        -0.64,
        0.61,
        -0.665,
        0.64,
        -0.665,
        0.59,
        -0.67,
        0.66,
        -0.67,
        0.625,
        -0.69,
        0.58,
        -0.605,
        0.6,
        -0.605,
        0.58,
        -0.625,
        0.6,
        -0.605,
        0.58,
        -0.625,
        0.6,
        -0.625,
        0.65,
        -0.605,
        0.67,
        -0.605,
        0.65,
        -0.625,
        0.67,
        -0.605,
        0.65,
        -0.625,
        0.67,
        -0.625,
        0.525,
        -0.5925,
        0.55,
        -0.5925,
        0.55,
        -0.61,
        0.7,
        -0.5925,
        0.725,
        -0.5925,
        0.7,
        -0.61,
        0.6075,
        -0.68,
        0.6425,
        -0.68,
        0.625,
        -0.69,
        0.625,
        -0.7,
        0.875,
        -0.7,
        0.625,
        -0.8,
        0.875,
        -0.7,
        0.625,
        -0.8,
        0.875,
        -0.8,
        0.625,
        -0.8,
        0.65,
        -0.8,
        0.625,
        -0.9,
        0.65,
        -0.8,
        0.675,
        -0.8,
        0.65,
        -0.9,
        0.825,
        -0.8,
        0.85,
        -0.8,
        0.825,
        -0.9,
        0.85,
        -0.8,
        0.875,
        -0.8,
        0.85,
        -0.9,
        0.875,
        -0.68,
        0.915,
        -0.68,
        0.875,
        -0.72,
        0.915,
        -0.68,
        0.875,
        -0.72,
        0.915,
        -0.72,

        //// house ////
        -0.9, -1, -0.9, -0.4, -0.1, -0.4, // square
        -0.9, -1, -0.1, -0.4, -0.1, -1,

        -0.375, -0.15, -0.175, -0.4, -0.375, -0.4, // guldduk 
        -0.375, -0.15, -0.175, -0.15, -0.175, -0.4,

        -0.9, -0.4, -0.1, -0.4, -0.5, -0.2, //roof

        -0.8, -0.55, -0.8, -0.75, -0.6, -0.55, // window
        -0.8, -0.75, -0.6, -0.75, -0.6, -0.55,

        -0.8, -0.55, -0.7, -0.55, -0.8, -0.68, // curtain
        -0.6, -0.55, -0.7, -0.55, -0.6, -0.68,

        -0.4, -0.7, -0.2, -0.7, -0.4, -1, // door
        -0.4, -1, -0.2, -1, -0.2, -0.7,

        -0.375, -0.8, -0.325, -0.8, -0.375, -0.85, // handle
        -0.375, -0.85, -0.325, -0.8, -0.325, -0.85,

        -0.375, -0.55, -0.325, -0.55, -0.375, -0.6, // lease1
        -0.375, -0.6, -0.325, -0.55, -0.325, -0.6,

        -0.3, -0.6, -0.3, -0.65, -0.25, -0.6, // lease2
        -0.25, -0.65, -0.3, -0.65, -0.25, -0.6,

        -0.325, -0.6, -0.325, -0.65, -0.275, -0.6, // lease3
        -0.275, -0.65, -0.325, -0.65, -0.275, -0.6,

        -0.25, -0.55, -0.2, -0.55, -0.25, -0.6, // lease4
        -0.25, -0.6, -0.2, -0.55, -0.2, -0.6,

        -0.25, -0.525, -0.2, -0.525, -0.25, -0.575, // lease5
        -0.25, -0.575, -0.2, -0.525, -0.2, -0.575,


        -0.375, -0.525, -0.325, -0.525, -0.375, -0.575, // lease6
        -0.375, -0.575, -0.325, -0.525, -0.325, -0.575,

        -0.3, -0.475, -0.3, -0.525, -0.25, -0.475, // lease7
        -0.25, -0.525, -0.3, -0.525, -0.25, -0.475,

        -0.325, -0.475, -0.325, -0.525, -0.275, -0.475, // lease7
        -0.275, -0.525, -0.325, -0.525, -0.275, -0.475,

        -0.375, -0.475, -0.375, -0.525, -0.325, -0.475, // ball1
        -0.325, -0.525, -0.375, -0.525, -0.325, -0.475,

        -0.25, -0.475, -0.2, -0.475, -0.25, -0.525, // ball2
        -0.25, -0.525, -0.2, -0.475, -0.2, -0.525,

        -0.25, -0.6, -0.25, -0.65, -0.2, -0.6, // ball3
        -0.2, -0.65, -0.25, -0.65, -0.2, -0.6,

        -0.375, -0.6, -0.375, -0.65, -0.325, -0.6, // ball4
        -0.325, -0.65, -0.375, -0.65, -0.325, -0.6,

        //// stars ////
        -0.9, 0.9, -0.7, 0.9, -0.8, 0.75,
        -0.9, 0.8, -0.7, 0.8, -0.8, 0.95,

        -0.7, 0.65, -0.6, 0.65, -0.65, 0.725,
        -0.7, 0.7, -0.6, 0.7, -0.65, 0.625,

        0.7, 0.65, 0.6, 0.65, 0.65, 0.725,
        0.7, 0.7, 0.6, 0.7, 0.65, 0.625,

        0.85, 0.85, 0.75, 0.85, 0.8, 0.925,
        0.85, 0.9, 0.75, 0.9, 0.8, 0.825,

        //santa
        -0.6, 1, -0.6, 0, 0.9, 1, 0.9, 1, -0.6, 0, 0.9, 0,//face
        -0.1, -0.6, -0.1, -0.8, 0, -0.6, -0.1, -0.8, 0, -0.6, 0, -0.8,
        0.2, -0.6, 0.2, -0.8, 0.3, -0.6, 0.2, -0.8, 0.3, -0.6, 0.3, -0.8,//2 legs

        //body
        -0.3, 0, -0.3, -0.6, 0.6, 0, 0.6, 0, -0.3, -0.6, 0.6, -0.6,
        //hat
        -0.8, 0.9, -0.8, 0.8, -0.6, 1,
        -0.6, 1, -0.8, 0.8, 0.9, 1,
        -0.8, 0.8, 0.9, 1, 0.9, 0.8,

        //hat_fur
        -0.9, 0.9, -0.9, 0.8, -0.8, 0.9, -0.9, 0.8, -0.8, 0.9, -0.8, 0.8,//
        -0.5, 0.9, -0.5, 0.7, 0.8, 0.9,
        -0.5, 0.7, 0.8, 0.9, 0.8, 0.7,//
        -0.6, 0.8, -0.6, 0.6, -0.4, 0.8,
        -0.6, 0.6, -0.5, 0.6, -0.5, 0.7,
        -0.5, 0.7, -0.4, 0.7, -0.4, 0.8,//
        0.7, 0.8, 0.9, 0.8, 0.9, 0.6,
        0.7, 0.8, 0.7, 0.7, 0.8, 0.7,
        0.8, 0.7, 0.8, 0.6, 0.9, 0.6,
        //beard
        -0.6, 0.4, -0.6, 0, 0.9, 0.4, -0.6, 0, 0.9, 0.4, 0.9, 0,
        -0.4, 0, -0.4, -0.1, 0.7, 0, -0.4, -0.1, 0.7, 0, 0.7, -0.1,
        -0.2, -0.1, -0.2, -0.2, 0.5, -0.1, -0.2, -0.2, 0.5, -0.1, 0.5, -0.2,
        0, -0.2, 0, -0.3, 0.3, -0.2, 0, -0.3, 0.3, -0.2, 0.3, -0.3,

        //belt_buckle
        0.1, -0.3, 0.1, -0.6, 0.4, -0.3, 0.1, -0.6, 0.4, -0.3, 0.4, -0.6,

        //eye
        -0.3, 0.7, -0.3, 0.4, 0, 0.7, -0.3, 0.4, 0, 0.7, 0, 0.4,
        0.3, 0.7, 0.3, 0.4, 0.6, 0.7, 0.3, 0.4, 0.6, 0.7, 0.6, 0.4,

        //eye_black
        -0.2, 0.6, -0.2, 0.4, 0, 0.6, -0.2, 0.4, 0, 0.6, 0, 0.4,
        0.4, 0.6, 0.4, 0.4, 0.6, 0.6, 0.4, 0.4, 0.6, 0.6, 0.6, 0.4,
        //mouth
        0, 0.3, 0, 0.2, 0.3, 0.3, 0, 0.2, 0.3, 0.3, 0.3, 0.2,
        //belt
        -0.3, -0.4, -0.3, -0.5, 0.1, -0.4, -0.3, -0.5, 0.1, -0.4, 0.1, -0.5,
        0.2, -0.4, 0.2, -0.5, 0.3, -0.4, 0.2, -0.5, 0.3, -0.4, 0.3, -0.5,
        0.4, -0.4, 0.4, -0.5, 0.6, -0.4, 0.4, -0.5, 0.6, -0.4, 0.6, -0.5,

        //boots
        -0.1, -0.7, -0.1, -0.9, 0, -0.7, -0.1, -0.9, 0, -0.7, 0, -0.9,
        0, -0.8, 0, -0.9, 0.1, -0.8, 0, -0.9, 0.1, -0.8, 0.1, -0.9,
        0.2, -0.7, 0.2, -0.9, 0.3, -0.7, 0.2, -0.9, 0.3, -0.7, 0.3, -0.9,
        0.3, -0.8, 0.3, -0.9, 0.4, -0.8, 0.3, -0.9, 0.4, -0.8, 0.4, -0.9

		]);

    //  Configure WebGL
    var colors = new Float32Array([
        //tree
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,

        //wood
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,

        //starr
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,

        //line
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,

        //deco1
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 1.0,

        //deco2
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 1.0,
        0.0, 1.0, 0.0, 1.0,
        0.0, 1.0, 0.0, 1.0,

        //deco3
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 1.0,
        0.0, 0.0, 1.0, 1.0,
        0.0, 0.0, 1.0, 1.0,

        //deco4
        0.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 1.0,
        1.0, 0.0, 1.0, 1.0,
        1.0, 0.0, 1.0, 1.0,

        //tree
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        1.0, 1.0, 1.0, 1.0,
        0.0, 0.5, 0.0, 1.0,
        0.0, 0.5, 0.0, 1.0,

        //wood
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,
        0.58, 0.2941, 0.0, 1.0,

        //starr
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,
        1.0, 1.0, 0.0, 1.0,

        //line
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,

        //deco1
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 0.5,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 1.0,
        1.0, 0.0, 0.0, 1.0,

        //deco2
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 0.5,
        0.0, 1.0, 0.0, 1.0,
        0.0, 1.0, 0.0, 1.0,
        0.0, 1.0, 0.0, 1.0,

        //deco3
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 0.5,
        0.0, 0.0, 1.0, 1.0,
        0.0, 0.0, 1.0, 1.0,
        0.0, 0.0, 1.0, 1.0,

        //deco4
        0.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 0.5,
        1.0, 0.0, 1.0, 1.0,
        1.0, 0.0, 1.0, 1.0,
        1.0, 0.0, 1.0, 1.0,

    ]);

    //resize and relocation to tree
    var size = 0.3;
    for (var i = 0; i <102; i++) {
        vertex[i] *= size;
        if (i % 2 == 0) {// x
            vertex[i] += 0.7;
        }
        else { //y
            vertex[i] += 0;

        }
    }
    for (var i = 102; i < 204; i++) {
        vertex[i] *= size;
        if (i % 2 == 0) {// x
            vertex[i] += 0.4;
        }
        else { //y
            vertex[i] += -0.05;

        }
    }

    //resize and relocation to santa
    var size = 0.2;
    for (var i = 678; i < vertex.length; i++) {
        vertex[i] *= size;
        if (i % 2 == 0) {// x
            vertex[i] += 0.2;
        }
        else { //y
            vertex[i] += -0.7;

        }
    }

    gl.viewport( 0, 0, canvas.width, canvas.height);
    
    gl.clearColor( 0.184314, 0.184314, 0.309804, 1.0 );    

    //  Load shaders and initialize 
    var program = initShaders( gl, "vertex-shader", "fragment-shader" );
	gl.useProgram( program );   

    // create a buffer on gpu and bind point    
    var bufferId = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);
	gl.bufferData(gl.ARRAY_BUFFER, vertex, gl.STATIC_DRAW);

    

    // Associate out shader variables with our data buffer

    
    // Associate out shader variables with our data buffer   	
	// attribute variable
    var vPosition = gl.getAttribLocation(program, "vPosition");
    gl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray( vPosition );

	// uniform variable
    var fColor = gl.getUniformLocation(program, "fColor");	

    var vertexColorBufferId = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, vertexColorBufferId);
    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);

    var vColor = gl.getAttribLocation(program, "vColor");
    gl.vertexAttribPointer(vColor, 4, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray(vColor);  

	// clear buffer bit
    gl.clear( gl.COLOR_BUFFER_BIT );

    //tree
    gl.drawArrays(gl.TRIANGLES, 0, 9);

    //wood
    gl.drawArrays(gl.TRIANGLES, 9, 6);

    //star
    gl.drawArrays(gl.TRIANGLES, 15, 6);

    //lines
    gl.drawArrays(gl.LINES, 21, 6);

    //deco
    gl.drawArrays(gl.TRIANGLE_FAN, 27, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 33, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 39, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 45, 6);

    //tree
    gl.drawArrays(gl.TRIANGLES, 51, 9);

    //wood
    gl.drawArrays(gl.TRIANGLES, 9 + 51, 6);

    //star
    gl.drawArrays(gl.TRIANGLES, 15 + 51, 6);

    //lines
    gl.drawArrays(gl.LINES, 21 + 51, 6);

    //deco
    gl.drawArrays(gl.TRIANGLE_FAN, 27 + 51, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 33 + 51, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 39 + 51, 6);
    gl.drawArrays(gl.TRIANGLE_FAN, 45 + 51, 6);

	//face
	gl.uniform4f(fColor,0.6, 0.27, 0, 1); // color (R,G,B,A)
    gl.drawArrays( gl.TRIANGLES, 102, 6);

	//left horn
	gl.uniform4f(fColor,0.3, 0.15, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 6 + 102, 6);

	//right horn
	gl.uniform4f(fColor,0.3, 0.15, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 12 + 102, 6);
	
	//left small horn
	gl.uniform4f(fColor,0.3, 0.15, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 18 + 102, 6);

	//right small horn
	gl.uniform4f(fColor,0.3, 0.15, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 24 + 102, 6);

	//ear
	gl.uniform4f(fColor,0.6, 0.27, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 30 + 102, 6);
	//left white eye
	gl.uniform4f(fColor,1, 1, 1, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 36 + 102, 6);
	//right white eye
	gl.uniform4f(fColor,1, 1, 1, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 42 + 102, 6);
	//red nose
	gl.uniform4f(fColor,1, 0, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 48 + 102, 6);
	
	//mouth
	gl.uniform4f(fColor,0.9, 0.9, 0.9, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 54 + 102, 3);
	
	//black eye
	gl.uniform4f(fColor,0, 0, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 57 + 102, 12);

	//pink ear, tongue
	gl.uniform4f(fColor,1, 0.5, 0.5, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 69 + 102, 9);

	//body & leg & tail
	gl.uniform4f(fColor,0.6, 0.27, 0, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 78 + 102, 24);
    
	//house square
	gl.uniform4f(fColor, 0.65, 0.50, 0.39, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 102 + 102, 6);
    
    //guldduk
    gl.uniform4f(fColor, 0.65, 0.50, 0.39, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 108 + 102, 6);
    
    //house roof
    gl.uniform4f(fColor, 0.91, 0.76, 0.65, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 114 + 102, 3);    

    // window
    gl.uniform4f(fColor, 1, 1, 1, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 117 + 102, 6);
    
    // curtain
    gl.uniform4f(fColor, 0.74902, 0.847059, 0.847059, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 123 + 102, 6);
    
    // door
    gl.uniform4f(fColor, 0.52, 0.37, 0.26, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 129 + 102, 6);
    
    // handle
    gl.uniform4f(fColor, 0.35, 0.16, 0.14, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 135 + 102, 6);
    
    // lease
    gl.uniform4f(fColor, 0.32, 0.49, 0.46, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 141 + 102, 48);
    
    //ribbon
    gl.uniform4f(fColor, 1, 0.1, 0.4, 1); // color (R,G,B,A)
    gl.drawArrays(gl.TRIANGLES, 189 + 102, 24);
    
    // star
    gl.uniform4f(fColor, 1, 1, 0, 1);
    gl.drawArrays(gl.TRIANGLES, 315, 24);


    gl.uniform4f(fColor, 0.91, 0.76, 0.65, 1.0);//skinColor
    gl.drawArrays(gl.TRIANGLES, 339, 18);//6+12

    gl.uniform4f(fColor, 1, 0.2, 0.0, 1.0);//red
    gl.drawArrays(gl.TRIANGLES, 357, 15);//6+9
    //renderBodyHat();
    gl.uniform4f(fColor, 1.0, 1.0, 1.0, 1.0);//white
    gl.drawArrays(gl.TRIANGLES, 321 + 51, 54);//6+24+24
    //renderFurBeard();
    gl.uniform4f(fColor,1.0, 1.0, 0.0, 1.0);//yellow
    gl.drawArrays(gl.TRIANGLES, 375 + 51, 6);//6
    //renderBuckle();
    gl.uniform4f(fColor, 0.74902, 0.847059, 0.847059, 1.0);//skyBlue
    gl.drawArrays(gl.TRIANGLES, 381 + 51, 12);//6+6
    //renderEyes();
    gl.uniform4f(fColor, 0.0, 0.0, 0.0, 1.0);//black
    gl.drawArrays(gl.TRIANGLES, 393 + 51, 36);//6+6+6+18
    //renderBlack();
    gl.uniform4f(fColor, 0.647059, 0.164706, 0.164706, 1.0);//brown
    gl.drawArrays(gl.TRIANGLES, 429 + 51, 24);//12+12

};